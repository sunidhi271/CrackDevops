pipeline {
    agent any
      
    options {
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/sunidhi271/my-repo.git'
            }
        }
        stage('Build') {
            steps {
                script {
                    try {
                        echo 'Building...'
                        sh 'mkdir -p build && echo "Hello World" > build/output.txt'
                    } catch (err) {
                        echo "Build failed: ${err}"
                        currentBuild.result = 'FAILURE'
                        error("Stopping pipeline due to build failure.")
                    }
                }
            }
        }
        stage('Archive Artifact') {
            steps {
                archiveArtifacts artifacts: 'build/*.txt', allowEmptyArchive: true
            }
        }
        stage('Release tag') {
            steps {
                build job: "release_Job", parameter: [string(name: 'currentbranch', value: ${gitlabTargetBranch})], propagate: true, wait: true
            }
        }
    }

    post {
        failure {
            echo "Pipeline failed! Check the logs."
        }
        success {
            echo "Pipeline completed successfully."
        }
    }
}
